# 파일 또는 디렉토리 검색 : find
find . -name "*.sh" #sh로 끝나는 파일 찾기

# 문자열 검색
grep -rni "hello"
    ( -r옵션 : 디렉토리 내 모든 파일에서 검색
      -i옵션 : 대소문자 구분 없이 검색
      -n옵션 : 라인수 출력 )
ps -ef | grep "nginx"
    (ps : 모든 프로세스에서 
     -e : 모든 프로세스를 선택
     -f : 전체 형식 출력 제공
      | : 두개의 명령어를 하나로 조합하기 위해 사용
      => nginx라는 값을 모든 프로세스에서 찾고, 이에 해당하는 모든 프로세스를 전체 형식에 맞춰 출력하여라.)

# 파일 또는 디렉토리 검색 : find
find . -name "*.sh" 
    (find [옵션] [경로] [표현식]
    -> -name == 옵션경로(원하는 옵션 찾아서 넣으면 됨) 
    // . == 하위디렉토리
    // * == 모든 것
    => 모든 스크립트를 찾겠다 // 
        ex. find . -name "*aa*.sh" == aa이름이 포함된 모든 스크립트를 찾겠다
        +) aa* == aa로 시작 // *aa* == aa가 포함된 // *aa == aa로 끝나는)
// find . -name "*.sh" | grep "hello" => 작동X(쉘의 내용 전체가 아닌 결과물만 넘기기 때문)

# 파일 검색 후 해당 내용에서 원하느 문자열 찾을때
find . -name "*.sh" | xargs grep -n "hello"
    ( xargs : 넘겨온 파일목록을 한줄 한줄 읽겠다라는 의미
      -n : 일치하는 텍스트가 발견된 줄의 줄번호 출력
      => '*이하'에 오는 값의 스크립트를 찾은 후, 그 스크립트에서 'hello'와 일치하는 텍스트 줄번호를 한줄한줄 출력하여라.)

# exec 옵션을 통한 find와 grep
find . -name "*.sh" -exec grep -n "hello" {} \;
# (grep 자리에 다른 옵션이 올 수 있음) // -exec ~ {} \;  -> 한 세트임
    ( -exec : 찾은 각 파일 지정된 명령어 시행
      -n : 일치하는 텍스트가 발견된 줄의 줄번호 출력
      {} == 명령어로부터 받은 파일 이름 /  그냥 {}이 들어가도 괜찮음
      \; : -exec 명령어를 끝냄
    ex. find . -name "*aa.sh" -exec grep -n "hello" {} \;
     => aa로 끝나는 이름을 가진 모든 스크립트를 찾은 후,
        hello라는 글자가 들어간 문장 출력을 실행하여라)



